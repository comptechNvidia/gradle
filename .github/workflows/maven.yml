# This workflow will build a Java project with Maven, caching and restoring any dependencies
# to improve workflow execution time.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven  # Enables caching of Maven dependencies

      - name: Build with Maven
        run: |
          echo "Building the project with Maven..."
          mvn -B package --file pom.xml
        continue-on-error: false  # Fail the job if the build fails

      - name: Check for Build Errors
        run: |
          echo "Checking for build errors..."
          if grep -q "ERROR" target/*; then
            echo "Build errors found! Please check the logs for details."
            exit 1
          else
            echo "Build completed successfully, no errors found."
          fi

      # Optional: Update the dependency graph to enhance the quality of Dependabot alerts
      - name: Update Dependency Graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        with:
          # This optional step submits the full dependency graph to GitHub.
          # It can be helpful for improving the quality of Dependabot alerts.
          github_token: ${{ secrets.GITHUB_TOKEN }}
